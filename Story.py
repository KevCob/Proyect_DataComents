import json
import streamlit as st
import plotly.express as px
import Story_Biblio as sb 
import pandas as pd
from datetime import datetime

def cargar_datos(ruta_archivo):
    try:
        with open(ruta_archivo, 'r', encoding='utf-8') as file:
            data = json.load(file)
        
        if "analisis_comentarios" not in data or "comentarios" not in data["analisis_comentarios"]:
            st.error("Estructura del JSON inv√°lida")
            return pd.DataFrame()
        
        noticias = data["analisis_comentarios"]["comentarios"]
        datos = []
        
        for noticia in noticias:
            if "comentarios" not in noticia:
                continue
                
            if noticia.get("categoria", "").lower() == "politica":
                for comentario in noticia.get("comentarios", []):
                    contenido = comentario.get("contenido")
                    if contenido is None or not isinstance(contenido, str): 
                        contenido = ""  
                    
                    fecha_str = comentario.get("fecha", "")
                    if not fecha_str:
                        continue
                    
                    try:
                        fecha = datetime.strptime(fecha_str, "%Y-%m-%d")
                    except ValueError:
                        continue
                    
                    datos.append({
                        "titulo_noticia": noticia.get("titulo_noticia", "Sin t√≠tulo"),
                        "fecha_comentario": fecha,
                        "contenido_comentario": contenido,  
                        "usuario": comentario.get("autor", "An√≥nimo")
                    })
        
        df = pd.DataFrame(datos)
        
        if not df.empty:
            df = df.sort_values('fecha_comentario')
            
        return df
    
    except Exception as e:
        st.error(f"Error al cargar datos: {str(e)}")
        return pd.DataFrame()

def mostrar_storytelling(df):
    df['narrativa'] = df['contenido_comentario'].apply(sb.clasificar_narrativa)
    df['emocion'], _ = zip(*df['contenido_comentario'].apply(sb.analizar_emociones))
    consignas_df, resumen_consignas = sb.analizar_consignas_cubanas(df)
    noticias_destacadas = sb.noticias_mas_comentadas(df, top_n=5)
    actividad_temporal = sb.analisis_temporal(df)
    
    st.markdown(f"""
    ## Dos a√±os en los comentarios pol√¨ticos de Cubadebate
    *Un an√°lisis de la participaci√≥n digital a trav√©s de los ojos de una universitario*

    ---

    _En un contexto marcado por la transformaci√≥n acelerada del ecosistema comunicativo cubano, 
    Con el creciente protagonismo de las redes sociales y la multiplicaci√≥n de espacios informativos alternativos,
    el sitio Cubadebate sigue siendo uno de los principales nodos de participaci√≥n digital en el pa√≠s_
    _"A trav√©s de sus secciones de comentarios, miles de usuarios interact√∫an, opinan, confrontan y canalizan emociones frente a los temas de la agenda p√∫blica nacional."_

    Este estudio analiza {len(df)} comentarios pol√≠ticos entre {df['fecha_comentario'].dt.date.min()} y {df['fecha_comentario'].dt.date.max()}, 
    como parte de una investigaci√≥n universitaria sobre comunicaci√≥n digital en Cuba.

    Jos√© Mart√≠nez, estudiante de cuarto a√±o de Derecho en la Universidad de La Habana, llevaba tres a√±os como presidente de la Federaci√≥n Estudiantil Universitaria (FEU). 
    Su carisma y habilidad para mediar entre estudiantes y administraci√≥n lo hab√≠an convertido en una figura respetada, pero √©l so√±aba con  entrar en la pol√≠tica nacional.

    Una tarde, mientras revisaba las noticias en Cubadebate, not√≥ algo peculiar: 
    los comentarios de una publicac√¨on superaban los 500 en solo unas horas. "¬øQu√® genera tanta pasi√≥n?", se pregunt√≥. Decidi√≥ investigar.


    """)

    st.plotly_chart(sb.picos_comentarios_por_fecha(df), use_container_width=True)
    st.markdown("""
    ### 29 de julio: El d√≠a que rompi√≥ r√©cords
    _"No pod√≠a creer lo que ve√≠a. 675 comentarios en un solo d√≠a , pero , que tema ser√° el que provoc√≥ tanta controversia en esta p√°gina.  
    ¬øSer√° que el tema toca fibra sensibles de nuestra realidad cotidiana?"_

    **Dato clave**: El pico hist√≥rico del 29/07 super√≥ en 3 veces el promedio diario
    -
    """)

    st.markdown("""
    ---

    ### Neutralidad aparente
    Al analizar los comentarios, Jos√© not√≥ que el 88% eran neutrales: frases como "ponle coraz√≤n" o "unidad del pueblo" dominaban el espacio. Pero en lugar de ver apat√≠a, 
    √©l detect√≥ miedo. "La gente no es indiferente -explicaba en una reuni√≥n de la FEU-, solo que no saben desde que perspectiva hablar"
    
    _"La clasificaci√≥n de los comentarios pol√≠ticos se pueden identificar en tres categor√≠as principales (progobierno, cr√≠ticos o neutros)"_
    """)
    
    fig_narrativa = px.pie(df, names='narrativa', title='Distribuci√≥n de narrativas',
                          color_discrete_map={'NEUTRO':'gray', 'PRO':'blue', 'ANTI':'red'})
    st.plotly_chart(fig_narrativa, use_container_width=True)
    
    conteo_narrativas = df['narrativa'].value_counts().to_dict()
    st.markdown(f"""
    **Desglose acad√©mico**:
    - Neutrales: 88.5%  
    _(Ejemplo t√≠pico: "Interesante art√≠culo, habr√° que esperar los resultados")_
    - PRO: 9.27%  
    _(Ejemplo: "Esto demuestra los avances de nuestra Revoluci√≥n")_
    - ANTI: 2.25%  
    _(Ejemplo: "Ojal√° se cumpla lo prometido esta vez")_

    """)

    st.markdown("""
    ---

    ### Consignas vs. conversaci√≥n
    "Hoy encontr√© algo curioso: 'Patria o Muerte' aparece 131 veces, 
    pero frases como 'No m√°s apagones' ninguna. ¬øD√≥nde quedaron las que vemos en Facebook?"

    **Hallazgo documentado**: Las consignas tradicionales predominan 34:1 sobre las cr√≠ticas
    """)
  
    top_consignas = consignas_df[consignas_df['Frecuencia']>0].sort_values('Frecuencia', ascending=False)
    fig_consignas = px.bar(top_consignas, 
                          x='Consigna', y='Frecuencia', 
                          color='Afinidad',
                          color_discrete_map={'PRO':'blue', 'ANTI':'red'},
                          title='Consignas detectadas (frecuencia > 0)')
    st.plotly_chart(fig_consignas, use_container_width=True)
    
    st.markdown("""
    **An√°lisis comparativo**:
    - "Cuba Libre" (69 usos):  
    _Aparece tanto en contextos patri√≥ticos como cr√≠ticos_
    - "No tenemos miedo" (2 usos):  
    _M√≠nima presencia vs. su circulaci√≥n en otras plataformas_
    - "Abajo la dictadura":  
    _Ausencia total en los datos analizados_

    _"Entonces esto refleja moderaci√≥n de contenido, autocensura o diferencias demogr√°ficas entre plataformas'._
    _ Uno de los aspectos m√°s novedosos de la investigaci√≥n es el an√°lisis l√©xico y discursivo de las consignas y frases que se repiten en los comentarios. _
    _¬øQu√© nivel de circulaci√≥n tienen expresiones como ‚ÄúPatria o Muerte‚Äù, ‚ÄúVamos con todo‚Äù, ‚ÄúResistir y vencer‚Äù? _
    _¬øSe utilizan como formas de afirmaci√≥n pol√≠tica o como recursos de iron√≠a o cr√≠tica?"_
    """)



    st.markdown("""
    ---
    ### Las noticias que generaron m√°s debate
    _"Al analizar los art√≠culos m√°s comentados, emerge un patr√≥n claro: los temas migratorios dominan la conversaci√≥n"_
    """)

    noticias_destacadas = sb.noticias_mas_comentadas(df, top_n=5)

    if not noticias_destacadas.empty:
        st.dataframe(noticias_destacadas.style.highlight_max(axis=0), use_container_width=True)
        st.markdown(f"""
        **An√°lisis tem√°tico**:
        - La noticia m√°s comentada (*{noticias_destacadas.iloc[0]['titulo_noticia']}*) acumul√≥ {noticias_destacadas.iloc[0]['total_comentarios']} comentarios
       
        
        _"No es casualidad que los temas migratorios generen tanta interacci√≥n. Para muchos cubanos, 
        la migraci√≥n no es solo un tema pol√≠tico, sino una experiencia personal o familiar que toca fibras sensibles. 
        Las discusiones reflejan tanto frustraciones cotidianas como debates ideol√≥gicos profundos sobre el futuro del pa√≠s."_
        """)
    else:
        st.warning("No se encontraron datos de noticias destacadas")

    st.markdown("""
    ---

    ### Conclusiones
    _"Podemos determinar que los datos muestran patrones claros, pero detr√°s de ellos hay historias complejas:_

    1. **El silencio elocuente**: La neutralidad predominante contrasta con el debate m√°s polarizado en otros espacios
    2. **Los temas sensibles**: Migraci√≥n moviliza m√°s que pol√≠tica partidista
    3. **Las palabras ausentes**: Algunas frases comunes en la calle no encuentran eco aqu√≠
                
    _Comprender las formas en que la ciudadan√≠a cubana se expresa, debate y construye sentido colectivo en Cubadebate, 
    resulta decisivo en una realidad donde la participaci√≥n digital es cada vez m√°s relevante. 
    Al mapear emociones, temas, patrones discursivos y niveles de participaci√≥n,  no solo  ofrecemos una lectura m√°s precisa del ECO ciudadano en l√≠nea, 
    sino tambi√©n ofrecemos  herramientas que contribuyan a fortalecer un di√°logo p√∫blico m√°s inclusivo, informado y constructivo._
                    
    Cuando Jos√© se gradu√≥, dej√≥ instalado en la FEU un grupo que analiza sistem√°ticamente las redes sociales para detectar problemas emergentes. 
    Su lema, inspirado en sus a√±os de investigaci√≥n, resume su filosof√≠a:

    "La verdad no est√° ni solo en los discursos oficiales ni solo en las cr√≠ticas destructivas. 
    Est√° en lo que la gente dice cuando cree que nadie la escucha. Nuestro trabajo es o√≠r esos susurros y convertirlos en acciones".

    """)

st.set_page_config(page_title="Cubadebate Analytics", page_icon="üìä", layout="wide")

with st.sidebar:
    st.title("Configuraci√≥n")
    archivo = st.file_uploader("Subir archivo JSON", type=["json"])
    if archivo:
        try:
            datos = json.load(archivo)
            with open("comentarios_cubadebate.json", "w", encoding="utf-8") as f:
                json.dump(datos, f)
            st.success("Archivo cargado correctamente")
        except Exception as e:
            st.error(f"Error al procesar archivo: {str(e)}")

try:
    df = cargar_datos("comentarios_cubadebate.json")
    if df.empty:
        st.warning("No se encontraron datos para analizar. Por favor sube un archivo v√°lido.")
    else:
        mostrar_storytelling(df)
except Exception as e:
    st.error(f"Error en la aplicaci√≥n: {str(e)}")